<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Annual GDP growth (%)+' inline='true' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Annual GDP growth (%)' name='textscan.0w3m2430a1y2hn1fvlomr14ikp5u'>
            <connection class='textscan' directory='C:/Users/carlo/OneDrive/ANALYTICS/ANALYTICS - IRONHACK/PORTFOLIO/PROJETOS/PROJETO_FINAL_CURSO/Nacoes_Unidas/Dados_Nacoes_Unidas/DADOS_PARA_TABLEAU' filename='Annual GDP growth (%).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='string' name='INDICADOR' ordinal='0' />
            <column datatype='string' name='PAIS' ordinal='1' />
            <column datatype='integer' name='ANO' ordinal='2' />
            <column datatype='real' name='VALOR' ordinal='3' />
            <column datatype='string' name='UNIDADE' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='real' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual growth rate of real GDP per capita.csv' table='[Annual growth rate of real GDP per capita#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Current number of seats in national parliaments.csv' table='[Current number of seats in national parliaments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker density, by type of occupation (per 10,000 population).csv' table='[Health worker density, by type of occupation (per 10,000 population)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker distribution, by sex and type of occupation.csv' table='[Health worker distribution, by sex and type of occupation#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Number of seats held by women in national parliaments.csv' table='[Number of seats held by women in national parliaments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Poverty gap ratio at USD 1 a day (PPP).csv' table='[Poverty gap ratio at USD 1 a day (PPP)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='real' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population below international poverty line.csv' table='[Proportion of population below international poverty line#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
              <column datatype='real' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic drinking water services.csv' table='[Proportion of population using basic drinking water services#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic sanitation services.csv' table='[Proportion of population using basic sanitation services#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ANO (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[ANO]' />
          <map key='[ANO (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[ANO]' />
          <map key='[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[ANO]' />
          <map key='[ANO (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[ANO]' />
          <map key='[ANO (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[ANO]' />
          <map key='[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[ANO]' />
          <map key='[ANO (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[ANO]' />
          <map key='[ANO (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[ANO]' />
          <map key='[ANO (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[ANO]' />
          <map key='[ANO]' value='[Annual GDP growth (%).csv].[ANO]' />
          <map key='[INDICADOR (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[INDICADOR]' />
          <map key='[INDICADOR (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[INDICADOR]' />
          <map key='[INDICADOR (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[INDICADOR]' />
          <map key='[INDICADOR (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[INDICADOR]' />
          <map key='[INDICADOR (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[INDICADOR]' />
          <map key='[INDICADOR (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[INDICADOR]' />
          <map key='[INDICADOR]' value='[Annual GDP growth (%).csv].[INDICADOR]' />
          <map key='[PAIS (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[PAIS]' />
          <map key='[PAIS (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[PAIS]' />
          <map key='[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[PAIS]' />
          <map key='[PAIS (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[PAIS]' />
          <map key='[PAIS (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[PAIS]' />
          <map key='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[PAIS]' />
          <map key='[PAIS (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[PAIS]' />
          <map key='[PAIS (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[PAIS]' />
          <map key='[PAIS (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[PAIS]' />
          <map key='[PAIS]' value='[Annual GDP growth (%).csv].[PAIS]' />
          <map key='[UNIDADE (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[UNIDADE]' />
          <map key='[UNIDADE (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[UNIDADE]' />
          <map key='[UNIDADE (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[UNIDADE]' />
          <map key='[UNIDADE (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[UNIDADE]' />
          <map key='[UNIDADE (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[UNIDADE]' />
          <map key='[UNIDADE (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[UNIDADE]' />
          <map key='[UNIDADE]' value='[Annual GDP growth (%).csv].[UNIDADE]' />
          <map key='[VALOR (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[VALOR]' />
          <map key='[VALOR (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[VALOR]' />
          <map key='[VALOR (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[VALOR]' />
          <map key='[VALOR (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[VALOR]' />
          <map key='[VALOR (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[VALOR]' />
          <map key='[VALOR (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[VALOR]' />
          <map key='[VALOR (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[VALOR]' />
          <map key='[VALOR (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[VALOR]' />
          <map key='[VALOR (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[VALOR]' />
          <map key='[VALOR]' value='[Annual GDP growth (%).csv].[VALOR]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VALOR]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VALOR (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ANO (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>37</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VALOR (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ANO (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>47</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ANO (Annual growth rate of real GDP per capita.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Current number of seats in national parliaments.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Health worker distribution, by sex and type of occupation.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Number of seats held by women in national parliaments.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Proportion of population using basic drinking water services.csv)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[ANO (Proportion of population using basic sanitation services.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
      <column caption='Ranking_1_USD' datatype='integer' name='[Calculation_734086766601142273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(COUNT([__tableau_internal_object_id__].[Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Cálculo1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Cálculo2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='POWER(ZN(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]))/LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4])), FIRST()),ZN(1/(INDEX()-1))) - 1'>
          <table-calc ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS (Proportion of population below international poverty line.csv)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Cálculo3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(ATTR([ANO]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Indicador' datatype='string' name='[INDICADOR]' role='dimension' type='nominal' />
      <column datatype='string' name='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[PAIS (Proportion of population using basic sanitation services.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Unidade' datatype='string' name='[UNIDADE]' role='dimension' type='nominal' />
      <column caption='Valor' datatype='real' name='[VALOR]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Annual GDP growth (%).csv' datatype='table' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Annual growth rate of real GDP per capita.csv' datatype='table' name='[__tableau_internal_object_id__].[Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Current number of seats in national parliaments.csv' datatype='table' name='[__tableau_internal_object_id__].[Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Health worker density, by type of occupation (per 10,000 population).csv' datatype='table' name='[__tableau_internal_object_id__].[Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Health worker distribution, by sex and type of occupation.csv' datatype='table' name='[__tableau_internal_object_id__].[Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Number of seats held by women in national parliaments.csv' datatype='table' name='[__tableau_internal_object_id__].[Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Poverty gap ratio at USD 1 a day (PPP).csv' datatype='table' name='[__tableau_internal_object_id__].[Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population using basic drinking water services.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population using basic sanitation services.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845]' role='measure' type='quantitative' />
      <column-instance column='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' derivation='Attribute' name='[attr:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' derivation='None' name='[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Developing regions&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eastern and South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central and Southern Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Landlocked developing countries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lao People&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least Developed Countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Small island developing States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caucasus and Central Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Africa and Western Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Developed regions&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe and Northern America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='INDICADOR (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='PAIS (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='ANO (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='VALOR (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='UNIDADE (Proportion of population using basic sanitation services.csv)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Annual GDP growth (%).csv' id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='real' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Annual growth rate of real GDP per capita.csv' id='Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual growth rate of real GDP per capita.csv' table='[Annual growth rate of real GDP per capita#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Current number of seats in national parliaments.csv' id='Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Current number of seats in national parliaments.csv' table='[Current number of seats in national parliaments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Health worker density, by type of occupation (per 10,000 population).csv' id='Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker density, by type of occupation (per 10,000 population).csv' table='[Health worker density, by type of occupation (per 10,000 population)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Health worker distribution, by sex and type of occupation.csv' id='Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker distribution, by sex and type of occupation.csv' table='[Health worker distribution, by sex and type of occupation#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Number of seats held by women in national parliaments.csv' id='Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Number of seats held by women in national parliaments.csv' table='[Number of seats held by women in national parliaments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Poverty gap ratio at USD 1 a day (PPP).csv' id='Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Poverty gap ratio at USD 1 a day (PPP).csv' table='[Poverty gap ratio at USD 1 a day (PPP)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='real' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population below international poverty line.csv' id='Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population below international poverty line.csv' table='[Proportion of population below international poverty line#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
                  <column datatype='real' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population using basic drinking water services.csv' id='Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic drinking water services.csv' table='[Proportion of population using basic drinking water services#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population using basic sanitation services.csv' id='Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic sanitation services.csv' table='[Proportion of population using basic sanitation services#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Annual growth rate of real GDP per capita.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Current number of seats in national parliaments.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Health worker distribution, by sex and type of occupation.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Number of seats held by women in national parliaments.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population below international poverty line.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population using basic drinking water services.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population using basic sanitation services.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='EvoluçãoAnualLinhaPobreza'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Proportion of population below international poverty line.csv' datatype='integer' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:VALOR (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' derivation='Count' name='[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS (Proportion of population below international poverty line.csv)]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Sum' name='[sum:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;C&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central African Republic&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central and Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developed regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developing regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern and South&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Landlocked developing countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Latin America and the Caribbean&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa and Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;T&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter function='level-members' level='[none:VALOR (Proportion of population below international poverty line.csv):ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter function='level-members' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[sum:VALOR (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</rows>
        <cols>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]</cols>
      </table>
      <simple-id uuid='{3565CA17-C351-421F-BC4D-97C7B4CB92F8}' />
    </worksheet>
    <worksheet name='MapaPIB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Annual GDP growth (%).csv' datatype='integer' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Annual GDP growth (%).csv' datatype='table' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[ANO]' derivation='CountD' name='[ctd:ANO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO]' derivation='None' name='[none:ANO:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PAIS]' derivation='None' name='[none:PAIS:nk]' pivot='key' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' derivation='Count' name='[pcto:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ANO]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]' included-values='non-null' />
          <filter affect-totals='true' class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]' included-values='in-range'>
            <min>-9999.0</min>
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]' field-type='quantitative' max='20904101.945998561' min='-19883454.639552411' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]' field-type='quantitative' max='15281266.486867134' min='-21352465.102804154' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcto:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk:3]' />
              <geometry column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]</rows>
        <cols>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{4C6FADA6-61E8-477B-81E8-03E7EEBF76F0}' />
    </worksheet>
    <worksheet name='MapaPIB (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
            <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Annual GDP growth (%).csv' datatype='integer' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column caption='Valor' datatype='real' name='[VALOR]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Annual GDP growth (%).csv' datatype='table' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAIS]' derivation='Max' name='[max:PAIS:nk]' pivot='key' type='nominal' />
            <column-instance column='[ANO]' derivation='None' name='[none:ANO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAIS]' derivation='None' name='[none:PAIS:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR]' derivation='None' name='[none:VALOR:nk]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:qk]' included-values='in-range'>
            <min>0</min>
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[max:PAIS:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[max:PAIS:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[max:PAIS:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[max:PAIS:nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]</rows>
        <cols>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR:nk]</cols>
      </table>
      <simple-id uuid='{62C21BB5-ABE2-464C-84BC-38EF93BAF5C1}' />
    </worksheet>
    <worksheet name='Planilha 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Proportion of population below international poverty line.csv' datatype='integer' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Attribute' name='[attr:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter from='1968' function='range' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:VALOR (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A5A05E4C-52D3-4A7E-B74B-2D391589C46B}' />
    </worksheet>
    <worksheet name='WordCloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='measure' type='quantitative' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='Attribute' name='[attr:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Sum' name='[sum:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;C&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developed regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developing regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern and South&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Landlocked developing countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Latin America and the Caribbean&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa and Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;T&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' member='2020' />
              <groupfilter function='member' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <size column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <text column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[sum:VALOR (Proportion of population below international poverty line.csv):qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{837B07A6-C5C4-4348-ADD2-D0D540FF38C1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Painel 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' name='MapaPIB' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='15750' id='9' name='MapaPIB' pane-specification-id='0' type-v2='map' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='MapaPIB' pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type-v2='color' w='16000' x='83200' y='16750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13750' id='11' name='MapaPIB' synchronized='1' type-v2='currpage' w='16000' x='83200' y='24875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='18' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='MapaPIB' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='9' name='MapaPIB' pane-specification-id='0' type-v2='map' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='MapaPIB' pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type-v2='color' w='16000' x='83200' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13750' id='11' name='MapaPIB' synchronized='1' type-v2='currpage' w='16000' x='83200' y='24875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A13E95D7-46F3-4471-BC17-1AC7AE489A9F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Planilha 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:VALOR (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO (Poverty gap ratio at USD 1 a day (PPP).csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FED709C-7090-44FE-AFA2-B474AD00599C}' />
    </window>
    <window class='worksheet' name='WordCloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE8D0E99-4B21-412B-813D-83DBC197E8EC}' />
    </window>
    <window class='worksheet' name='EvoluçãoAnualLinhaPobreza'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='filter' />
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5520D4A0-92B1-4C30-A3C6-DFBCCBDAA5ED}' />
    </window>
    <window class='worksheet' name='MapaPIB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' type='map' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1994</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AFE271DE-9B7B-410C-B987-D93E52CC3426}' />
    </window>
    <window class='worksheet' maximized='true' name='MapaPIB (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[max:PAIS:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:UNIDADE:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{134DAB39-04E4-43C1-BD47-382C19B24105}' />
    </window>
    <window class='dashboard' name='Painel 1'>
      <viewpoints>
        <viewpoint name='MapaPIB'>
          <current-page>
            <multibucket>
              <bucket>1994</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{591E9A3E-E44C-4284-90A5-2EE9D5CF6E5B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='EvoluçãoAnualLinhaPobreza' width='288'>
      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
      /z3/AY59tBMrdSyjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='288' name='MapaPIB' width='288'>
      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
      ErS4d0UmTrUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='MapaPIB (2)' width='288'>
      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
      0zncR2E0iDdagXV9BFasg7FuAuiRWFktO2PlX/+XzWDHGaxA5nEmecUlzNy+RaKtlmC4iMN7
      Wvj0g/cIairN1Zsy7KngDcbYe+Q1ph7c5uP33qO0tgTI5iSPEAnOcG9wmtYSuDUxzyteL8b8
      PGosc99QKK8CfepjTl3SaW+pJ6jqDPbepmtwnlde25lx3+rmQk5e6Kby8CZ6z10iUHcYLIu4
      qjj0+IUoKkrRcbWLcGKUZSVO/+AEgelO1PKWjCeK119ETfgaH564REUgza3Oe4yZo9weXuLo
      G5mbVysby/n04hW05iKGUnG0q7co2VLC7WXDoWHWR1mFh76+CQpbS6nbuo+pLz7h18fuYSSc
      HlBZiNcYYja9hwKfl32vHOXj937JQEkRnlDmL1e4opUNleM0bdpBcfjbFq7w0pLDbYlK7eY9
      3L/Sz+49e1aE+TKpySsO9YZpr/Xw4adfsrHIpvPqXZLRBa519fPiOz/N/Kqan+Zt+6iaH+f8
      6c9Qi4tJmdk0+yp4g3nsO/Iak4M9fPz+e5RWl2BnHJn1SASPb4FE0sQfLGRHO2iqQmp0DLu4
      8PFXWe+N0MZSHyev6Lz20obVN7JtZidGsCPFFIb9Dxt5kwvcvtlLefsmSla9DF35J2wsI8Wt
      K+dJFrSye4NTOwFY6SWuXrzA+KLJpl37KQ+r4NVQNV+GAWsANpahM9TXQ++DCUxFo7iino3N
      tQ8bOzMWajF8r5Prt4fIr2lj79ZGVGzSaQO/P3MPj2WkGOy7hxEoob4iQueF8yx4S9i/axN+
      j0OTo22xNDvBre4e5lMW5dXNtDRV4fc41WszN/GAgckELa1NLA51c/X2GNsOHqEy5lBvOsHw
      xByV1RVogG2ZTI32MzKjsmlLY8bQTC9MMJEOUV0cAdvGNFIM3L2NnVdDU1Vhhj3B0NOgefCo
      KmCwtKhjxBfwFhUTzjCuzLZt9LSO1+97rGdocmSWgsqSjPXatk1qeZZbN7uYXEhSWFFP+4YG
      gisadJ3YlslY/026h2wOvbQ960G0j8797svn0Is3srPFedWt+clRiBSTt6Kbf/zeTahooyz8
      7Xu07q6AFiaHuD8y/c0t2NLYHZTSzOOAbFvnQe8t7o0ts/GFg2hj17l8e5Ti+i1syNBoCA8/
      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
      QmCC
    </thumbnail>
    <thumbnail height='288' name='Painel 1' width='288'>
      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
      RoAMBkPH+P9gziK5Uz4qEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='36' name='Planilha 1' width='96'>
      iVBORw0KGgoAAAANSUhEUgAAAGAAAAAkCAYAAAB2UT9CAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAB/UlEQVRoge3Z0UvbUBTH8Z82S025Ekm1qVprwIA1qG+K7z76F+wv3F/g495Fn9zEOYjg
      1M1UbbB4sRpSu4epbGBZU1JPbzyf5xw45Uub5Hak0+l0wMiMUi/w3nEAYhyAGAcgxgGIcQBi
      HIAYByDGAYhxAGIcgBgHIMYBiHEAYhyAGAcgxgGIadQLpO1G3uO03sRFQ0K2IgCAMHRMFwWq
      tokJMUa84b8yEyCK2/DPQ+x++4nvZw0EoYS8ewpQ0FG2BBbnilhfmoVbsaBrOeKN/xjJwn/C
      UdzG1+M6tnd8HJ5covUQv3qdkdfgOSVsbbhYWbCHIkImvgH+eYjtHR/7foC4/dj1utZDjH0/
      AAAY+Q/wnKm3WrEr5b8BX47r+PT5AIcnV4nmPGcKHzeXsbpgD2iz3ij/FHTRkAhCmXguCPub
      S5vyAWQrernZJpq7i3Dbx1zalA+gOuUDCEOHKOjJ5wo6xvuYS5vyAaaLAmVLJJ4rW/3NpU35
      AFXbxOJcEUa+9ydqI6+hVp3EvG0OcLPeKB9gQoxhfWkWnlOClvv/x9Fyo/CcEtZqMzCH4Fgi
      Ey9ibsXC1oYLAD2/CbsV6y1X7Er5F7Fnz2dBe0e/cHR6/epZUK06ibXaDJ8FDVJT3uNHvYkg
      lC/P+eNPAeZtcyh+dv6WuQCqUf4mrDoOQOw3m7igGeErIKcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='WordCloud' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3Bk15Xn+Xs2fSbSwHugYAoob8gy9BSdREkUZUhNS+pudfdOT2/vbPRO
      zMR+2NiIjY2dnZ39sDM9sROzPd096m6p5ShPimxaia7IYnmPKhS8NwkgfeYzdz88VKJQQBlS
      RUKk3i8CAeR791nk+79zzz33HEkIIXBxcXHZAOSNPgEXF5ffXVwBcnFx2TBcAXJxcdkwXAFy
      cXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBc
      AXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZ
      MFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJx
      cdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwB
      cnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkw
      XAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx2TBcAXJxcdkwXAFycXHZMFwBcnFx
      2TBcAXJxcdkwXAFyAcAolZienGRsZITJ8XHyuRxCiNu2/1KxyCsvPE8qtXTdNrZtMz01STaT
      uW3H/SgQQlBM5cnPZ8o/lmGxNDyPbdqr2hn5EvlkhsJiDtuyr7vPYipPbi79gc/pyjF+21E3
      +gRcNhYhBJMT47zywgsU8nlkWca2LSzLpnPzZu771EPI8m/+nrIsi6HBAbbv3nPdNqVikR98
      +9vsO3iQvfsP/MbH/KgQtmC+b4pgbQWyunyvlkUpWFdRbldcypOeWMRb4cc2LYqpPJGm+Lr7
      tEomRq70gc/JzBtI6m+/feEK0O84hXyenz/zQ3btvYPtu3ajezwYhsH87Cznzpy+rVbQzdA9
      Hr7yta8RDIY+smPeLmRNIVAVQtGv/0gVFnIEKkP4K53ru3Jvbct2rKaiiR704Knwl7exDBMz
      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
      ohJLbqaQvojr2lz+7foC9FNIT0MfE+lx/vbo19EVnd7GfizH4sL8ORzXIWSEuad9J6+de5WQ
      EUIVKo8NPEksGOeFo19HVw0eXf/kiqEGl/4WS//UBeNMZsf51okXsByL5uj1s0p8IGyb/A9f
      Q4lGQUoijzyMCAbRuzpJf/NvwHUJbN8Our4igHx5b5a49FBduqbLA82XBNd7Kgnu3Enue99D
      GAZaSzO4LtkXv7W0/jr7Lx8MEAS2bkUgyH3nu0Qee5TcK6+Sn5oC1yV0/x5ktUru29/xaoMt
      LWhNSYQiyL38CuWTp7AnJoh86lPguuRfeRVpWRjd3aj1ca+2dMW5GAMD5F9+hcrp06jRKOHH
      Hl1xD6RrY1WyjJz8axo7PwFCob51B9KxaOx8gMzcKRRt9c6FayFdB6Fo6IF6UiOvYdvFq7YR
      CELRdiLxHibPfovOTT/vCR3+bHgfnzUj9/2XCT/0yRXd6x8Wi9OHycweR1FNkl2fJBhpXXLy
      dJif+An59EXiTduoa9xELnWeWGID4JKdP00o1kWltEAkvo5CdgzdiGIE4qRnj1OX3EJ2/hTp
      maPUt+5ACJVow3rSsyeoS25CCIVSfgqhaJjBRlIzR7zgdbAB8AXIx2fNKOzfT3D37jvWdPw4
      4guQj4/PmuF3w/v4+KwZvgD5+PisGb4A+fh8jHEyGTJ//6I3FOEaSMsboHk59sJibb7aWuLH
      gHx8PqZIKamcOoWbL6B3daFEI2BZoKrgSipnzyIdByUUonzkPYJ7dqE1N2PPzCKrFYy+PmTV
      onT4MEZ3F2Z//4eT7Ow6+OOAfHw+rkiJs7CAuWkz1ugompPEzRcQpolbKFA5e5bQrl1oTUlw
      Xcz+fkpH3gPVs7aRpRLSlTipFMWJCfTOLpTA3e2R85tgPj4fU9xikcqFIQoHDlC9eBHpuril
      Evb0NKgq4YceonLuHE4+j6xWvNpQOExgwyBCU7104kNDhPftQ2tuAvfuz1/0m2A+Ph9TnHwe
      XBc1FsOenUOJhCkfPwGqitHbQ/XsWdB1gtu3Uz51CiUQQG1MokYjONmsN9WkVKZ8/DhaSwtG
      by9Cv7uNIl+AfHx81gy/Cebj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPj
      s2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk
      4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4
      AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+Oz
      ZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj47Nm+ALk4+OzZvgC5OPjs2b4AuTj
      47Nm+ALk4+OzZvz/9Wh41QhJTfUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
