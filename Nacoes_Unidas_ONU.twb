<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Annual GDP growth (%)+' inline='true' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Annual GDP growth (%)' name='textscan.0w3m2430a1y2hn1fvlomr14ikp5u'>
            <connection class='textscan' directory='C:/Users/carlo/OneDrive/ANALYTICS/ANALYTICS - IRONHACK/PORTFOLIO/PROJETOS/PROJETO_FINAL_CURSO/Nacoes_Unidas/Dados_Nacoes_Unidas/DADOS_PARA_TABLEAU' filename='Annual GDP growth (%).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='string' name='INDICADOR' ordinal='0' />
            <column datatype='string' name='PAIS' ordinal='1' />
            <column datatype='integer' name='ANO' ordinal='2' />
            <column datatype='string' name='VALOR' ordinal='3' />
            <column datatype='string' name='UNIDADE' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual growth rate of real GDP per capita.csv' table='[Annual growth rate of real GDP per capita#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Current number of seats in national parliaments.csv' table='[Current number of seats in national parliaments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker density, by type of occupation (per 10,000 population).csv' table='[Health worker density, by type of occupation (per 10,000 population)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker distribution, by sex and type of occupation.csv' table='[Health worker distribution, by sex and type of occupation#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='string' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Number of seats held by women in national parliaments.csv' table='[Number of seats held by women in national parliaments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Poverty gap ratio at USD 1 a day (PPP).csv' table='[Poverty gap ratio at USD 1 a day (PPP)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='real' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population below international poverty line.csv' table='[Proportion of population below international poverty line#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
              <column datatype='real' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic drinking water services.csv' table='[Proportion of population using basic drinking water services#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='integer' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic sanitation services.csv' table='[Proportion of population using basic sanitation services#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='INDICADOR' ordinal='0' />
              <column datatype='string' name='PAIS' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
              <column datatype='integer' name='VALOR' ordinal='3' />
              <column datatype='string' name='UNIDADE' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ANO (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[ANO]' />
          <map key='[ANO (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[ANO]' />
          <map key='[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[ANO]' />
          <map key='[ANO (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[ANO]' />
          <map key='[ANO (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[ANO]' />
          <map key='[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[ANO]' />
          <map key='[ANO (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[ANO]' />
          <map key='[ANO (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[ANO]' />
          <map key='[ANO (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[ANO]' />
          <map key='[ANO]' value='[Annual GDP growth (%).csv].[ANO]' />
          <map key='[INDICADOR (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[INDICADOR]' />
          <map key='[INDICADOR (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[INDICADOR]' />
          <map key='[INDICADOR (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[INDICADOR]' />
          <map key='[INDICADOR (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[INDICADOR]' />
          <map key='[INDICADOR (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[INDICADOR]' />
          <map key='[INDICADOR (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[INDICADOR]' />
          <map key='[INDICADOR (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[INDICADOR]' />
          <map key='[INDICADOR]' value='[Annual GDP growth (%).csv].[INDICADOR]' />
          <map key='[PAIS (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[PAIS]' />
          <map key='[PAIS (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[PAIS]' />
          <map key='[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[PAIS]' />
          <map key='[PAIS (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[PAIS]' />
          <map key='[PAIS (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[PAIS]' />
          <map key='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[PAIS]' />
          <map key='[PAIS (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[PAIS]' />
          <map key='[PAIS (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[PAIS]' />
          <map key='[PAIS (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[PAIS]' />
          <map key='[PAIS]' value='[Annual GDP growth (%).csv].[PAIS]' />
          <map key='[UNIDADE (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[UNIDADE]' />
          <map key='[UNIDADE (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[UNIDADE]' />
          <map key='[UNIDADE (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[UNIDADE]' />
          <map key='[UNIDADE (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[UNIDADE]' />
          <map key='[UNIDADE (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[UNIDADE]' />
          <map key='[UNIDADE (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[UNIDADE]' />
          <map key='[UNIDADE (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[UNIDADE]' />
          <map key='[UNIDADE]' value='[Annual GDP growth (%).csv].[UNIDADE]' />
          <map key='[VALOR (Annual growth rate of real GDP per capita.csv)]' value='[Annual growth rate of real GDP per capita.csv].[VALOR]' />
          <map key='[VALOR (Current number of seats in national parliaments.csv)]' value='[Current number of seats in national parliaments.csv].[VALOR]' />
          <map key='[VALOR (Health worker density, by type of occupation (per 10,000 population).csv)]' value='[Health worker density, by type of occupation (per 10,000 population).csv].[VALOR]' />
          <map key='[VALOR (Health worker distribution, by sex and type of occupation.csv)]' value='[Health worker distribution, by sex and type of occupation.csv].[VALOR]' />
          <map key='[VALOR (Number of seats held by women in national parliaments.csv)]' value='[Number of seats held by women in national parliaments.csv].[VALOR]' />
          <map key='[VALOR (Poverty gap ratio at USD 1 a day (PPP).csv)]' value='[Poverty gap ratio at USD 1 a day (PPP).csv].[VALOR]' />
          <map key='[VALOR (Proportion of population below international poverty line.csv)]' value='[Proportion of population below international poverty line.csv].[VALOR]' />
          <map key='[VALOR (Proportion of population using basic drinking water services.csv)]' value='[Proportion of population using basic drinking water services.csv].[VALOR]' />
          <map key='[VALOR (Proportion of population using basic sanitation services.csv)]' value='[Proportion of population using basic sanitation services.csv].[VALOR]' />
          <map key='[VALOR]' value='[Annual GDP growth (%).csv].[VALOR]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE]</local-name>
            <parent-name>[Annual GDP growth (%).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Annual growth rate of real GDP per capita.csv)]</local-name>
            <parent-name>[Annual growth rate of real GDP per capita.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Current number of seats in national parliaments.csv)]</local-name>
            <parent-name>[Current number of seats in national parliaments.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Health worker density, by type of occupation (per 10,000 population).csv)]</local-name>
            <parent-name>[Health worker density, by type of occupation (per 10,000 population).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VALOR (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Health worker distribution, by sex and type of occupation.csv)]</local-name>
            <parent-name>[Health worker distribution, by sex and type of occupation.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Number of seats held by women in national parliaments.csv)]</local-name>
            <parent-name>[Number of seats held by women in national parliaments.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VALOR (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Poverty gap ratio at USD 1 a day (PPP).csv)]</local-name>
            <parent-name>[Poverty gap ratio at USD 1 a day (PPP).csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ANO (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>37</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VALOR (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population below international poverty line.csv)]</local-name>
            <parent-name>[Proportion of population below international poverty line.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANO (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population using basic drinking water services.csv)]</local-name>
            <parent-name>[Proportion of population using basic drinking water services.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICADOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICADOR (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>INDICADOR</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAIS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PAIS (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>PAIS</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANO</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ANO (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>ANO</remote-alias>
            <ordinal>47</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALOR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VALOR (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>VALOR</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIDADE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIDADE (Proportion of population using basic sanitation services.csv)]</local-name>
            <parent-name>[Proportion of population using basic sanitation services.csv]</parent-name>
            <remote-alias>UNIDADE</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ANO (Annual growth rate of real GDP per capita.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Current number of seats in national parliaments.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Health worker density, by type of occupation (per 10,000 population).csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Health worker distribution, by sex and type of occupation.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Number of seats held by women in national parliaments.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Poverty gap ratio at USD 1 a day (PPP).csv)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO (Proportion of population using basic drinking water services.csv)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[ANO (Proportion of population using basic sanitation services.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
      <column caption='Ranking_1_USD' datatype='integer' name='[Calculation_734086766601142273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(COUNT([__tableau_internal_object_id__].[Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Cálculo1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Cálculo2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='POWER(ZN(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]))/LOOKUP(ZN(COUNT([__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4])), FIRST()),ZN(1/(INDEX()-1))) - 1'>
          <table-calc ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS (Proportion of population below international poverty line.csv)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Cálculo3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(ATTR([ANO]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Indicador' datatype='string' name='[INDICADOR]' role='dimension' type='nominal' />
      <column datatype='string' name='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[PAIS (Proportion of population using basic sanitation services.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Unidade' datatype='string' name='[UNIDADE]' role='dimension' type='nominal' />
      <column caption='Valor' datatype='string' name='[VALOR]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Annual GDP growth (%).csv' datatype='table' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Annual growth rate of real GDP per capita.csv' datatype='table' name='[__tableau_internal_object_id__].[Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Current number of seats in national parliaments.csv' datatype='table' name='[__tableau_internal_object_id__].[Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Health worker density, by type of occupation (per 10,000 population).csv' datatype='table' name='[__tableau_internal_object_id__].[Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Health worker distribution, by sex and type of occupation.csv' datatype='table' name='[__tableau_internal_object_id__].[Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Number of seats held by women in national parliaments.csv' datatype='table' name='[__tableau_internal_object_id__].[Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Poverty gap ratio at USD 1 a day (PPP).csv' datatype='table' name='[__tableau_internal_object_id__].[Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population using basic drinking water services.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Proportion of population using basic sanitation services.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845]' role='measure' type='quantitative' />
      <column-instance column='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' derivation='Attribute' name='[attr:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' derivation='None' name='[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Developing regions&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eastern and South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central and Southern Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Landlocked developing countries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lao People&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least Developed Countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Small island developing States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caucasus and Central Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Africa and Western Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Developed regions&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe and Northern America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='INDICADOR (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='PAIS (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='ANO (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='VALOR (Proportion of population using basic sanitation services.csv)' />
        <field-sort-custom-order field='UNIDADE (Proportion of population using basic sanitation services.csv)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Annual GDP growth (%).csv' id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual GDP growth (%).csv' table='[Annual GDP growth (%)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Annual growth rate of real GDP per capita.csv' id='Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Annual growth rate of real GDP per capita.csv' table='[Annual growth rate of real GDP per capita#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Current number of seats in national parliaments.csv' id='Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Current number of seats in national parliaments.csv' table='[Current number of seats in national parliaments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Health worker density, by type of occupation (per 10,000 population).csv' id='Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker density, by type of occupation (per 10,000 population).csv' table='[Health worker density, by type of occupation (per 10,000 population)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Health worker distribution, by sex and type of occupation.csv' id='Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Health worker distribution, by sex and type of occupation.csv' table='[Health worker distribution, by sex and type of occupation#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='string' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Number of seats held by women in national parliaments.csv' id='Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Number of seats held by women in national parliaments.csv' table='[Number of seats held by women in national parliaments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Poverty gap ratio at USD 1 a day (PPP).csv' id='Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Poverty gap ratio at USD 1 a day (PPP).csv' table='[Poverty gap ratio at USD 1 a day (PPP)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='real' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population below international poverty line.csv' id='Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population below international poverty line.csv' table='[Proportion of population below international poverty line#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
                  <column datatype='real' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population using basic drinking water services.csv' id='Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic drinking water services.csv' table='[Proportion of population using basic drinking water services#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='integer' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Proportion of population using basic sanitation services.csv' id='Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845'>
            <properties context=''>
              <relation connection='textscan.0w3m2430a1y2hn1fvlomr14ikp5u' name='Proportion of population using basic sanitation services.csv' table='[Proportion of population using basic sanitation services#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='INDICADOR' ordinal='0' />
                  <column datatype='string' name='PAIS' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='ANO' ordinal='2' />
                  <column datatype='integer' name='VALOR' ordinal='3' />
                  <column datatype='string' name='UNIDADE' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Annual growth rate of real GDP per capita.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Annual growth rate of real GDP per capita.csv_618AFB5E379D437798CAAEE4BB74E66E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Current number of seats in national parliaments.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Current number of seats in national parliaments.csv_9F601A856F8F4E82ACCFC2C3E069E16D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Health worker density, by type of occupation (per 10,000 population).csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Health worker density, by type of occupation (per 10,000 population).csv_1CCB2C0BE6F84E0291E26E0065489A71' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Health worker distribution, by sex and type of occupation.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Health worker distribution, by sex and type of occupation.csv_C6ABBCA8EAB24BBBBC110C6081C295DD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Number of seats held by women in national parliaments.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Number of seats held by women in national parliaments.csv_BB9ACE48869D4C8AA27352C7B2E7BDE5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Poverty gap ratio at USD 1 a day (PPP).csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Poverty gap ratio at USD 1 a day (PPP).csv_5F4AF2346B4B4FA8935F06430AF172C2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population below international poverty line.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population using basic drinking water services.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population using basic drinking water services.csv_905B24C91343422FB2E9B32FCC273F6D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[PAIS]' />
              <expression op='[PAIS (Proportion of population using basic sanitation services.csv)]' />
            </expression>
            <first-end-point object-id='Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113' />
            <second-end-point object-id='Proportion of population using basic sanitation services.csv_1E0A928DF1634E61878350EA98DF3845' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='EvoluçãoAnualLinhaPobreza'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Proportion of population below international poverty line.csv' datatype='integer' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:VALOR (Proportion of population below international poverty line.csv):nk]' pivot='key' type='ordinal' />
            <column-instance column='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' derivation='Count' name='[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS (Proportion of population below international poverty line.csv)]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Sum' name='[sum:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;C&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central African Republic&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central and Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Central Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developed regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developing regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern and South&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Landlocked developing countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Latin America and the Caribbean&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa and Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;T&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]'>
            <groupfilter function='level-members' level='[none:VALOR (Proportion of population below international poverty line.csv):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter function='level-members' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[sum:VALOR (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</rows>
        <cols>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcdf:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk:1]</cols>
      </table>
      <simple-id uuid='{3565CA17-C351-421F-BC4D-97C7B4CB92F8}' />
    </worksheet>
    <worksheet name='MapaPIB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Annual GDP growth (%).csv' datatype='integer' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Annual GDP growth (%).csv' datatype='table' name='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[PAIS]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[ANO]' derivation='CountD' name='[ctd:ANO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO]' derivation='None' name='[none:ANO:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PAIS]' derivation='None' name='[none:PAIS:nk]' pivot='key' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113]' derivation='Count' name='[pcto:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ANO]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]' included-values='non-null' />
          <filter affect-totals='true' class='quantitative' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]' included-values='in-range'>
            <min>-9999.0</min>
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[pcdf:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]' field-type='quantitative' max='19914362.202332422' min='-14995342.985993896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]' field-type='quantitative' max='12352349.113470767' min='-19002134.381055195' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[pcto:cnt:Annual GDP growth (%).csv_7ADFD75F9D304B2DBCDFEBFB4C6D4113:qk:3]' />
              <geometry column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Latitude (generated)]</rows>
        <cols>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{4C6FADA6-61E8-477B-81E8-03E7EEBF76F0}' />
    </worksheet>
    <worksheet name='MapaPIB (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='integer' name='[ANO]' role='dimension' type='quantitative' />
            <column caption='Pais' datatype='string' name='[PAIS]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Unidade' datatype='string' name='[UNIDADE]' role='dimension' type='nominal' />
            <column caption='Valor' datatype='string' name='[VALOR]' role='dimension' type='nominal' />
            <column-instance column='[UNIDADE]' derivation='CountD' name='[ctd:UNIDADE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAIS]' derivation='None' name='[none:PAIS:nk]' pivot='key' type='nominal' />
            <column-instance column='[UNIDADE]' derivation='None' name='[none:UNIDADE:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR]' derivation='None' name='[none:VALOR:nk]' pivot='key' type='nominal' />
            <column-instance column='[ANO]' derivation='Sum' name='[sum:ANO:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' />
              <wedge-size column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[sum:ANO:qk]' />
              <size column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:UNIDADE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:UNIDADE:nk] / [federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{62C21BB5-ABE2-464C-84BC-38EF93BAF5C1}' />
    </worksheet>
    <worksheet name='Planilha 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Proportion of population below international poverty line.csv' datatype='integer' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Proportion of population below international poverty line.csv' datatype='table' name='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Attribute' name='[attr:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter from='1968' function='range' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-purple-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:VALOR (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A5A05E4C-52D3-4A7E-B74B-2D391589C46B}' />
    </worksheet>
    <worksheet name='WordCloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='Annual GDP growth (%)+' name='federated.0u8rc0j02js63j1ace4p40dlhfz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8rc0j02js63j1ace4p40dlhfz3'>
            <column datatype='date' name='[ANO (Proportion of population below international poverty line.csv)]' role='dimension' type='quantitative' />
            <column datatype='string' default-role='measure' default-type='ordinal' name='[PAIS (Proportion of population below international poverty line.csv)]' role='dimension' type='nominal' />
            <column datatype='real' name='[VALOR (Proportion of population below international poverty line.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='Attribute' name='[attr:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[PAIS (Proportion of population below international poverty line.csv)]' derivation='None' name='[none:PAIS (Proportion of population below international poverty line.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[VALOR (Proportion of population below international poverty line.csv)]' derivation='Sum' name='[sum:VALOR (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year-Trunc' name='[tyr:ANO (Proportion of population below international poverty line.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ANO (Proportion of population below international poverty line.csv)]' derivation='Year' name='[yr:ANO (Proportion of population below international poverty line.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Americas&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;C&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developed regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Developing regions&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern and South&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Landlocked developing countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Latin America and the Caribbean&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Least Developed Countries&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Africa and Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Northern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Southern Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;T&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Africa&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Asia&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:PAIS (Proportion of population below international poverty line.csv):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' member='2020' />
              <groupfilter function='member' level='[yr:ANO (Proportion of population below international poverty line.csv):ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</column>
            <column>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <size column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <text column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[sum:VALOR (Proportion of population below international poverty line.csv):qk]' />
              <lod column='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{837B07A6-C5C4-4348-ADD2-D0D540FF38C1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Painel 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' name='MapaPIB' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='15750' id='9' name='MapaPIB' pane-specification-id='0' type-v2='map' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='MapaPIB' pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type-v2='color' w='16000' x='83200' y='16750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13750' id='11' name='MapaPIB' synchronized='1' type-v2='currpage' w='16000' x='83200' y='24875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='MapaPIB' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='9' name='MapaPIB' pane-specification-id='0' type-v2='map' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='MapaPIB' pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type-v2='color' w='16000' x='83200' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13750' id='11' name='MapaPIB' synchronized='1' type-v2='currpage' w='16000' x='83200' y='24875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A13E95D7-46F3-4471-BC17-1AC7AE489A9F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Planilha 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2006</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[attr:VALOR (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO (Poverty gap ratio at USD 1 a day (PPP).csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Poverty gap ratio at USD 1 a day (PPP).csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FED709C-7090-44FE-AFA2-B474AD00599C}' />
    </window>
    <window class='worksheet' name='WordCloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE8D0E99-4B21-412B-813D-83DBC197E8EC}' />
    </window>
    <window class='worksheet' name='EvoluçãoAnualLinhaPobreza'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]' type='filter' />
            <card param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5520D4A0-92B1-4C30-A3C6-DFBCCBDAA5ED}' />
    </window>
    <window class='worksheet' name='MapaPIB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' type='map' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1994</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AFE271DE-9B7B-410C-B987-D93E52CC3426}' />
    </window>
    <window class='worksheet' name='MapaPIB (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:UNIDADE:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1994</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[__tableau_internal_object_id__].[cum:cnt:Proportion of population below international poverty line.csv_D7ACEDB266A4428E8F1094C898AC3BE4:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[clct:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[cnt:PAIS (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[ctd:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:ANO:qk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:INDICADOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:PAIS:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR (Proportion of population below international poverty line.csv):nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[none:VALOR:nk]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[tyr:ANO (Proportion of population below international poverty line.csv):ok]</field>
            <field>[federated.0u8rc0j02js63j1ace4p40dlhfz3].[yr:ANO (Proportion of population below international poverty line.csv):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{134DAB39-04E4-43C1-BD47-382C19B24105}' />
    </window>
    <window class='dashboard' maximized='true' name='Painel 1'>
      <viewpoints>
        <viewpoint name='MapaPIB'>
          <current-page>
            <multibucket>
              <bucket>1994</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{591E9A3E-E44C-4284-90A5-2EE9D5CF6E5B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='EvoluçãoAnualLinhaPobreza' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='MapaPIB' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='MapaPIB (2)' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Painel 1' width='288'>
      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
    </thumbnail>
    <thumbnail height='36' name='Planilha 1' width='96'>
      iVBORw0KGgoAAAANSUhEUgAAAGAAAAAkCAYAAAB2UT9CAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAB/UlEQVRoge3Z0UvbUBTH8Z82S025Ekm1qVprwIA1qG+K7z76F+wv3F/g495Fn9zEOYjg
      1M1UbbB4sRpSu4epbGBZU1JPbzyf5xw45Uub5Hak0+l0wMiMUi/w3nEAYhyAGAcgxgGIcQBi
      HIAYByDGAYhxAGIcgBgHIMYBiHEAYhyAGAcgxgGIadQLpO1G3uO03sRFQ0K2IgCAMHRMFwWq
      tokJMUa84b8yEyCK2/DPQ+x++4nvZw0EoYS8ewpQ0FG2BBbnilhfmoVbsaBrOeKN/xjJwn/C
      UdzG1+M6tnd8HJ5covUQv3qdkdfgOSVsbbhYWbCHIkImvgH+eYjtHR/7foC4/dj1utZDjH0/
      AAAY+Q/wnKm3WrEr5b8BX47r+PT5AIcnV4nmPGcKHzeXsbpgD2iz3ij/FHTRkAhCmXguCPub
      S5vyAWQrernZJpq7i3Dbx1zalA+gOuUDCEOHKOjJ5wo6xvuYS5vyAaaLAmVLJJ4rW/3NpU35
      AFXbxOJcEUa+9ydqI6+hVp3EvG0OcLPeKB9gQoxhfWkWnlOClvv/x9Fyo/CcEtZqMzCH4Fgi
      Ey9ibsXC1oYLAD2/CbsV6y1X7Er5F7Fnz2dBe0e/cHR6/epZUK06ibXaDJ8FDVJT3uNHvYkg
      lC/P+eNPAeZtcyh+dv6WuQCqUf4mrDoOQOw3m7igGeErIKcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='WordCloud' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZAd13Xn+buZ+fb91at9RxW2AoiVIBbuFEWKkiVSGyXbsseO8Yyn7ban
      7XBHTHimox0z/cEfejx22O6wW3bLLctumxJJSZRISpRIQiABYt9RAApL7ft79V69Pbc7H7Lw
      gGJhIUFQRYj5YzAQyLx5783Ey3+ee+655woppcTFxcVlGVCWuwMuLi4fX1wBcnFxWTZcAXJx
      cVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwB
      cnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2
      XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFx
      WTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxcVk2XAFy
      cXFZNlwBcnFxWTZcAXJxcVk2XAFycXFZNlwBcnFxWTZcAXJxuQlSSqSUd+31H3W05e6Ai8tH
      hcJkjvJsAYTz90BdGCEElmERbUsAjiAYJZ386By2ZRNMhQnWRxBCXLfOqWPDNG7quO0+zZ6d
      IN6VwhPw3nYdH2VcAXJxWaCcKRJpS+CPB2vHilPzi8rYhkXm3CSpvhYUj0pxeh7bsFC97qt0
      O7hPzcXlfWBbNkJVUDwqiqIQaY4DjmVUnJynMlcEIYi0xPBGA7Xr5kczBFMRNL8HSzcpTufx
      J4Lkx+awDQtv2E+0PQkC9EKVwngWadvo85Vau/nROfRCBW/YR6Q16bQ5lcMb9lOazRPrqLvr
      hND1Abm4XEM1V6acLlBOFzDK+pLzmt+DLxpg5tQY82NzmFXDOSHBG/GRXNNEvDtFdnAWaV/1
      3SiaWrOmypkiSImiKsQ660j1tWBVTcqZIrZuMXdhmmh7krrVzXhCPgByg7MomkJqbQuqVyM7
      OIO0bfJjWcqZIrHOD1d8bF0n/+qPkJZ183KF4pJj1vz8Da+7u+TSxeXDRIJlWFi687KoPntJ
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
